#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

IFS=' '

original_branch=`git rev-parse --abbrev-ref HEAD`
exit_status=0

BASEDIR=$(dirname $0)

while read local_ref local_sha remote_ref remote_sha
do
    if [ "$local_sha" = $z40 ]
    then
        # Handle delete
        :
    else
        git checkout $local_ref
        if [ $? -ne 0 ]
        then
            echo "pre-push: Cannot checkout to $local_ref, not pushing"
            exit_status=1
            break
        fi

		if [ "$remote_sha" = $z40 ]
		then
			range="master..$local_sha" # NOT accurate. But I don't know a better way.
		else
			range="$remote_sha..$local_sha"
		fi

        git diff --unified=0 $range | grep '^+' | grep -f ${BASEDIR}/common-misspelling-patterns --color
        if [ $? -eq 0 ]
        then
            echo "pre-push: Errata detected on $local_ref, not pushing"
            exit_status=1
            break
        fi

		if [ "$remote_sha" = $z40 ]
		then
			range="master..$local_sha" # NOT accurate. But I don't know a better way.
		else
			range="$remote_sha..$local_sha"
		fi

        git diff --check $range
        if [ $? -ne 0 ]
        then
            echo "pre-push: Whitespace error detected on $local_ref, not pushing"
            exit_status=1
            break
        fi

        play test
        if [ $? -ne 0 ]
        then
            echo "pre-push: Unittest for $local_ref failed, not pushing"
            exit_status=1
            break
        fi
    fi
done

git checkout $original_branch

exit $exit_status
